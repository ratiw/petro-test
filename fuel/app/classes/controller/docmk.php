<?php

/**
 * Generated by Crude CRUD generator for Fuel on
 * November 25, 2011, 4:57 am
 *
 * @file      classes\controller\docmk.php
 * @database  fuel_dev
 * @type      mysql
 * @table     docmk
 * @stencil   activeapp
 */

class Controller_DocMK extends Controller_App
{

	/**
	 * Define columns
	 */
	protected static function _columns($page = 'index')
	{
		$columns_for = array(
			'view' => array(
				array('name' => 'id', 'required' => true),
				array('name' => 'mk_no', 'required' => true),
				array('name' => 'mk_date', 'required' => true),
				array('name' => 'client_id', 'required' => true),
				array('name' => 'client_po'),
				array('name' => 'deliver_date'),
				array('name' => 'deliver_to'),
				array('name' => 'is_delivered'),
				array('name' => 'product_type'),
				array('name' => 'belt_type', 'required' => true),
				array('name' => 'belt_color', 'required' => true),
				array('name' => 'belt_width', 'required' => true),
				array('name' => 'belt_width_unit', 'required' => true),
				array('name' => 'belt_ply', 'required' => true),
				array('name' => 'belt_ep', 'required' => true),
				array('name' => 'belt_grade', 'required' => true),
				array('name' => 'belt_top_grade'),
				array('name' => 'belt_bot_grade'),
				array('name' => 'belt_thick', 'required' => true),
				array('name' => 'belt_top_thick', 'required' => true),
				array('name' => 'belt_bot_thick', 'required' => true),
				array('name' => 'belt_length', 'required' => true),
				array('name' => 'belt_length_unit', 'required' => true),
				array('name' => 'belt_end', 'required' => true),
				array('name' => 'belt_qty', 'required' => true),
				array('name' => 'belt_price'),
				array('name' => 'belt_disc1', 'label' => 'Discount1'),
				array('name' => 'belt_disc2', 'label' => 'Discount2'),
				array('name' => 'belt_disc3', 'label' => 'Discount3'),
				array('name' => 'belt_price_net'),
				array('name' => 'belt_amount'),
				array('name' => 'remark'),
				array('name' => 'creator_id'),
				array('name' => 'creator_name'),
				array('name' => 'status'),
			),
			'index' => array(
				array('name' => 'id'),
				array('name' => 'mk_no'),
				array('name' => 'mk_date'),
				array('name' => 'client_id'),
				array('name' => 'status'),
				Petro_Grid::_default_actions(),
			),
		);
		
		return $columns_for[$page];
	}


	/**
	 * Index
	 */
	public function action_index($curr_page = 1, $order_by = null, $scope = null, $filter = null)
	{
		// $grid = new Petro_Grid(Model_DocMK::forge(), static::_columns('index'));
		$grid = new Petro_Grid('Model_DocMK');
		
		$data['index_content'] = $grid->render(); //$curr_page, $order_by, $scope, $filter);
		
		$this->sidebars->add('Sample Sidebar',
			"This is a sample. Delete this section from code, if you don't want them"
		);
		
		$this->action_items = array(
			array('title' => 'Add New Docmk', 'link' => 'docmk/create'),
		);

		// set this to override default page_title
		// $this->template->page_title = "MK";
		$this->template->content = View::forge('docmk/index', $data, false);
	}

	/**
	 * View
	 */
	public function action_view($id = null)
	{
		$docmk = Model_DocMK::find($id);

		$data['docmk'] = Petro::render_panel(
			'Docmk Information',
			$data['docmk'] = Petro::render_attr_table($docmk, static::_columns('view'))
		);
		
		$this->sidebars->add(
			'Render from another View!', 
			View::forge('docmk/sidebar_link', array('url' => 'going/anywhere'))
		);
		
		$this->action_items = array(
			array('title' => 'Edit Docmk', 'link' => 'docmk/edit/'.$id),
			array('title' => 'Delete Docmk', 'link' => 'docmk/delete/'.$id),
		);

		// $this->template->page_title = "MK";
		$this->template->content = View::forge('docmk/view', $data, false);
	}

	/**
	 * Create
	 */
	public function action_create($id = null)
	{
		if (Input::method() == 'POST')
		{
			$docmk = Model_DocMK::forge(array(
				'mk_no'            => Input::post('mk_no'),
				'mk_date'          => Input::post('mk_date'),
				'client_id'        => Input::post('client_id'),
				'client_po'        => Input::post('client_po'),
				'deliver_date'     => Input::post('deliver_date'),
				'deliver_to'       => Input::post('deliver_to'),
				'is_delivered'     => Input::post('is_delivered'),
				'product_type'     => Input::post('product_type'),
				'belt_type'        => Input::post('belt_type'),
				'belt_color'       => Input::post('belt_color'),
				'belt_width'       => Input::post('belt_width'),
				'belt_width_unit'  => Input::post('belt_width_unit'),
				'belt_ply'         => Input::post('belt_ply'),
				'belt_ep'          => Input::post('belt_ep'),
				'belt_grade'       => Input::post('belt_grade'),
				'belt_top_grade'   => Input::post('belt_top_grade'),
				'belt_bot_grade'   => Input::post('belt_bot_grade'),
				'belt_thick'       => Input::post('belt_thick'),
				'belt_top_thick'   => Input::post('belt_top_thick'),
				'belt_bot_thick'   => Input::post('belt_bot_thick'),
				'belt_length'      => Input::post('belt_length'),
				'belt_length_unit' => Input::post('belt_length_unit'),
				'belt_end'         => Input::post('belt_end'),
				'belt_qty'         => Input::post('belt_qty'),
				'belt_price'       => Input::post('belt_price'),
				'belt_disc1'       => Input::post('belt_disc1'),
				'belt_disc2'       => Input::post('belt_disc2'),
				'belt_disc3'       => Input::post('belt_disc3'),
				'belt_price_net'   => Input::post('belt_price_net'),
				'belt_amount'      => Input::post('belt_amount'),
				'remark'           => Input::post('remark'),
				'creator_id'       => Input::post('creator_id'),
				'creator_name'     => Input::post('creator_name'),
				'status'           => Input::post('status'),
			));

			if ($docmk and $docmk->save())
			{
				Session::set_flash('notice', 'Added docmk #' . $docmk->id . '.');
				Response::redirect('docmk');
			}
			else
			{
				Session::set_flash('notice', 'Could not save docmk.');
			}
		}

		$this->template->page_title = "New Doc MK";
		$this->template->content = View::forge('docmk/create');
	}

	/**
	 * Edit
	 */
	public function action_edit($id = null)
	{
		$docmk = Model_DocMK::find($id);

		if (Input::method() == 'POST')
		{
				$docmk->mk_no            = Input::post('mk_no');
				$docmk->mk_date          = Input::post('mk_date');
				$docmk->client_id        = Input::post('client_id');
				$docmk->client_po        = Input::post('client_po');
				$docmk->deliver_date     = Input::post('deliver_date');
				$docmk->deliver_to       = Input::post('deliver_to');
				$docmk->is_delivered     = Input::post('is_delivered');
				$docmk->product_type     = Input::post('product_type');
				$docmk->belt_type        = Input::post('belt_type');
				$docmk->belt_color       = Input::post('belt_color');
				$docmk->belt_width       = Input::post('belt_width');
				$docmk->belt_width_unit  = Input::post('belt_width_unit');
				$docmk->belt_ply         = Input::post('belt_ply');
				$docmk->belt_ep          = Input::post('belt_ep');
				$docmk->belt_grade       = Input::post('belt_grade');
				$docmk->belt_top_grade   = Input::post('belt_top_grade');
				$docmk->belt_bot_grade   = Input::post('belt_bot_grade');
				$docmk->belt_thick       = Input::post('belt_thick');
				$docmk->belt_top_thick   = Input::post('belt_top_thick');
				$docmk->belt_bot_thick   = Input::post('belt_bot_thick');
				$docmk->belt_length      = Input::post('belt_length');
				$docmk->belt_length_unit = Input::post('belt_length_unit');
				$docmk->belt_end         = Input::post('belt_end');
				$docmk->belt_qty         = Input::post('belt_qty');
				$docmk->belt_price       = Input::post('belt_price');
				$docmk->belt_disc1       = Input::post('belt_disc1');
				$docmk->belt_disc2       = Input::post('belt_disc2');
				$docmk->belt_disc3       = Input::post('belt_disc3');
				$docmk->belt_price_net   = Input::post('belt_price_net');
				$docmk->belt_amount      = Input::post('belt_amount');
				$docmk->remark           = Input::post('remark');
				$docmk->creator_id       = Input::post('creator_id');
				$docmk->creator_name     = Input::post('creator_name');
				$docmk->status           = Input::post('status');
				$docmk->created_at       = Input::post('created_at');
				$docmk->updated_at       = Input::post('updated_at');

			if ($docmk->save())
			{
				Session::set_flash('notice', 'Updated docmk #' . $id);
				Response::redirect('docmk');
			}
			else
			{
				Session::set_flash('notice', 'Could not update docmk #' . $id);
			}
		}
		else
		{
			$this->template->set_global('docmk', $docmk);
		}

		// $this->template->page_title = "Docmk";
		$this->template->content = View::forge('docmk/edit');
	}

	/**
	 * Delete
	 */
	public function action_delete($id = null)
	{
		if ($docmk = Model_DocMK::find($id))
		{
			$docmk->delete();

			Session::set_flash('notice', 'Deleted docmk #' . $id);
		}
		else
		{
			Session::set_flash('notice', 'Could not delete docmk #' . $id);
		}

		Response::redirect('docmk');
	}

}